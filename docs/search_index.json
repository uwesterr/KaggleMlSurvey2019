[
["index.html", "Analysis of 2019 Kaggle ML &amp; DS Survey Chapter 1 Introduction", " Analysis of 2019 Kaggle ML &amp; DS Survey Uwe Sterr 2020-01-10 Chapter 1 Introduction This is an analysis based on Kaggle survey, details are at https://www.kaggle.com/c/kaggle-survey-2019 The survey received 19,717 usable respondents from 171 countries and territories. If a country or territory received less than 50 respondents, they were grouped and named “Other” for anonymity. The survey was live from October 8th to October 28th 2019. The median response time for those who participated in the survey was approximately 10 minutes. Easy histogram plot of all questions can be created in R as shown at https://www.kaggle.com/paultimothymooney/how-to-explore-the-2019-kaggle-survey-data "],
["purpose.html", "Chapter 2 Purpose 2.1 Survey participants education level", " Chapter 2 Purpose The purpose of the survery analysis is to create insight into which algorithms tools plattforms are used in the field of machine learning. Contrary to public opinon machine learning is not mainly focused on neural networks. 2.1 Survey participants education level The following plot shows Survey participants education level. Very few participants have a non-academic background. By no means a academic background is a pre-requisit to use machine learning two skills are very helpful Coding experience Statistical knowledge Coding experience speeds up the process to implement the machine learning ideas and concepts. Most effort during a machien learning project will go into Data pre-processing Model tuning The actual implementation of the algorithm is mostly a matter of 10 - 20 lines of code. Below the neural network definition for a self driving RC model car of the donkey car framework. The neural network is defined using the Keras API which sits on top of Tensorflow, the program is written in Python img_in = Input(shape=input_shape, name=&#39;img_in&#39;) x = img_in x = Convolution2D(24, (5,5), strides=(2,2), activation=&#39;relu&#39;, name=&quot;conv2d_1&quot;)(x) x = Dropout(drop)(x) x = Convolution2D(32, (5,5), strides=(2,2), activation=&#39;relu&#39;, name=&quot;conv2d_2&quot;)(x) x = Dropout(drop)(x) if input_shape[0] &gt; 32 : x = Convolution2D(64, (5,5), strides=(2,2), activation=&#39;relu&#39;, name=&quot;conv2d_3&quot;)(x) else: x = Convolution2D(64, (3,3), strides=(1,1), activation=&#39;relu&#39;, name=&quot;conv2d_3&quot;)(x) if input_shape[0] &gt; 64 : x = Convolution2D(64, (3,3), strides=(2,2), activation=&#39;relu&#39;, name=&quot;conv2d_4&quot;)(x) elif input_shape[0] &gt; 32 : x = Convolution2D(64, (3,3), strides=(1,1), activation=&#39;relu&#39;, name=&quot;conv2d_4&quot;)(x) x = Dropout(drop)(x) x = Convolution2D(64, (3,3), strides=(1,1), activation=&#39;relu&#39;, name=&quot;conv2d_5&quot;)(x) x = Flatten(name=&#39;flattened&#39;)(x) x = Dense(100, activation=&#39;relu&#39;, name=&quot;fc_1&quot;)(x) x = Dropout(drop)(x) x = Dense(50, activation=&#39;relu&#39;, name=&quot;fc_2&quot;)(x) x = Dropout(drop)(x) angle_out = Dense(15, activation=&#39;softmax&#39;, name=&#39;angle_out&#39;)(x) throttle_out = Dense(20, activation=&#39;softmax&#39;, name=&#39;throttle_out&#39;)(x) model = Model(inputs=[img_in], outputs=[angle_out, throttle_out]) "],
["literature.html", "Chapter 3 Literature", " Chapter 3 Literature Here is a review of existing methods. "]
]

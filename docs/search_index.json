[
["index.html", "Analysis of 2019 Kaggle ML &amp; DS Survey Chapter 1 Introduction 1.1 Purpose 1.2 Results 1.3 Navigation and handling", " Analysis of 2019 Kaggle ML &amp; DS Survey Uwe Sterr 2020-01-17 Chapter 1 Introduction This is an analysis based on Kaggle survey data, details are at https://www.kaggle.com/c/kaggle-survey-2019. Kaggle is a subsidiary of Google LLC online community of data scientists machine learners. It offers data sets, a no-setup, customizable, Jupyter Notebooks environment, machine learning competitions and access free GPUs and a huge repository of community published data &amp; code. The survey received 19,717 usable respondents from 171 countries and territories. If a country or territory received less than 50 respondents, they were grouped and named “Other” for anonymity. The survey was live from October 8th to October 28th 2019. The median response time for those who participated in the survey was approximately 10 minutes. An overview of the world wide participation is given in the map below. The first three countries are India USA Brazil All numbers of all countries are given in the interactive table below. To find a specific country, type the name in the search field. Surprising facts: Almost as many participants from Saudi Arabia (50) and Norway (51) Peru (74) higher than Belgium (70) Iran (96) higher than Sweden (92) The word frequency word cloud shows that software engineers and data scientist are heavily involved the field of machine learning Easy histogram plots of all questions can be created in R as shown at https://www.kaggle.com/paultimothymooney/how-to-explore-the-2019-kaggle-survey-data 1.1 Purpose The purpose of the survey analysis is to create insight into which algorithms tools platforms are used in the field of machine learning. Contrary to public opinion machine learning is not mainly focused on neural networks. 1.2 Results The results are presented by graphs relating parameters either vs time or vs other parameters. 1.3 Navigation and handling To navigate between results use arrow keys or click on sidebar entry Further information on handling can be obtained by clicking on the “i” at the left hand side on top of the page "],
["survey-participants-education-level.html", "Chapter 2 Survey participants education level", " Chapter 2 Survey participants education level The following plot shows survey participants education level. Very few participants have a non-academic background. By no means a academic background is a pre-requisit to use machine learning, however, two skills are very helpful Coding experience Statistical knowledge Coding experience speeds up the process to implement the machine learning ideas and concepts. Most effort during a machine learning project will go into Data pre-processing Model tuning The actual implementation of the algorithm is often a matter of 10 - 20 lines of code. Below the neural network definition for a self driving RC model car of the donkey car framework. The neural network is defined using the Keras API which sits on top of Tensorflow, the program is written in Python img_in = Input(shape=input_shape, name=&#39;img_in&#39;) x = img_in x = Convolution2D(24, (5,5), strides=(2,2), activation=&#39;relu&#39;, name=&quot;conv2d_1&quot;)(x) x = Dropout(drop)(x) x = Convolution2D(32, (5,5), strides=(2,2), activation=&#39;relu&#39;, name=&quot;conv2d_2&quot;)(x) x = Dropout(drop)(x) if input_shape[0] &gt; 32 : x = Convolution2D(64, (5,5), strides=(2,2), activation=&#39;relu&#39;, name=&quot;conv2d_3&quot;)(x) else: x = Convolution2D(64, (3,3), strides=(1,1), activation=&#39;relu&#39;, name=&quot;conv2d_3&quot;)(x) if input_shape[0] &gt; 64 : x = Convolution2D(64, (3,3), strides=(2,2), activation=&#39;relu&#39;, name=&quot;conv2d_4&quot;)(x) elif input_shape[0] &gt; 32 : x = Convolution2D(64, (3,3), strides=(1,1), activation=&#39;relu&#39;, name=&quot;conv2d_4&quot;)(x) x = Dropout(drop)(x) x = Convolution2D(64, (3,3), strides=(1,1), activation=&#39;relu&#39;, name=&quot;conv2d_5&quot;)(x) x = Flatten(name=&#39;flattened&#39;)(x) x = Dense(100, activation=&#39;relu&#39;, name=&quot;fc_1&quot;)(x) x = Dropout(drop)(x) x = Dense(50, activation=&#39;relu&#39;, name=&quot;fc_2&quot;)(x) x = Dropout(drop)(x) angle_out = Dense(15, activation=&#39;softmax&#39;, name=&#39;angle_out&#39;)(x) throttle_out = Dense(20, activation=&#39;softmax&#39;, name=&#39;throttle_out&#39;)(x) model = Model(inputs=[img_in], outputs=[angle_out, throttle_out]) "],
["who-uses-which-algorithm.html", "Chapter 3 Who uses which algorithm", " Chapter 3 Who uses which algorithm There are plenty of machine learning algorithms in use, some have been around for quite some time already, others are quite new. Especially in the field of neural networks there is plenty of research ongoing as can be seen by a search with the keywords “neural network” on the moderated but not peer reviewed electronic preprint plattform Arxiv. The last Qualification which is cut off in the legend in the plot above reads “Some college/university study without earning a bachelor’s degree” Splitting the graphs up for each category of education and plotting the percentage of usage for the given education level gives an insight into how the usage of algorithms differs over levels of education The graph above shows that regression and tree-based algorithms are very popular They are: Less computationally intensive than neural networks Available in the de facto standard machine learning library in Python, scikit-learn. Below historical data to some the algorithms are given, together with links to the Wikipedia article on the algorithm. Linear regression Legendre, 1805 Gauss, 1809 Logistic regression Pierre Francois Verhulst, 1830s Random forest Ho, 1995 Gradient boosting trees L. Breiman, 1997 Convolutional neural networks Kunihiko Fukushima, 1980 Recurrent neural networks David Rumelhart, 1986 Dense neural networks Independently proposed by Alexander Bain, 1873 and William James, 1890 Generative adversarial networks Goodfellow, 2010-2014 "],
["machine-learning-experience-and-algorithms.html", "Chapter 4 Machine learning experience and algorithms", " Chapter 4 Machine learning experience and algorithms Most of the survey participants have less than 3 years machine learning experience as can be seen in the graph below. Due to fact that the number in each category differs a lot a representation of percentages is beneficial for some analysis. The usage of algorithms for different duration of experience is given in the graph below. Splitting the graphs up for each category of experience and plotting the percentage of usage for the given experience level gives an insight into how the usage of algorithms differs over levels of experience Regression and trees are popular at all level of experience Neural networks are more popular for less experienced 20% of very experienced use no algorithm "],
["experience-and-new-algorithms.html", "Chapter 5 Experience and new algorithms", " Chapter 5 Experience and new algorithms Newer algorithms there are: Evolutionary Approaches Transformer Networks (BERT, gpt-2, etc) Generative Adversarial Networks where evolutionary approaches have been around for quite some time but the usage of them in machine learning is rather recent. Splitting the graphs up for each category of experience and plotting the percentage of usage for the given experience level gives an insight into how the usage of new algorithms differs over levels of experience From the above graph it can be deducted that: Very experienced use new algorithms less often Newbies embrace them Evolutionary approaches are popular for medium experienced "],
["role-of-participants.html", "Chapter 6 Role of participants", " Chapter 6 Role of participants The role of the participants is shown in the graph below The numbers for certain categories certainly have to be taken with a grain of salt since it is not clear how well participants will differentiate e.g. “Data Scientist” and “Data Analyst”. However, it is clear that students are quite active on Kaggle. This might influence the later data since students tend to use freeware more than professionals. Also there are: Many Software engineers Very few Statistician "],
["company-size.html", "Chapter 7 Company size", " Chapter 7 Company size The company size of the participants is shown in the graph below Largest group of participants are from small companies Second largest group of participants are from small companies "],
["company-incorporation-of-machine-learning.html", "Chapter 8 Company incorporation of machine learning", " Chapter 8 Company incorporation of machine learning The degree of machine learning utilization in the companies of the participants is shown in the graph below All participants of companies with &gt; 10,000 employees declare that &quot;We have well established ML methods (i.e., models in production for more than 2 years)&quot; Splitting the graphs up for each category of company size and plotting the incorporation of machine learning shows this even more clearly Leaving out the “&gt; 10,000 employees” category for better comparison More companies explore machine learning than having it established Many companies don’t use machine learning However, their employees invest in ML Danger of loosing employees Maybe companies are slow to discover ML potential "],
["favorite-media-sources-on-data-science-topics.html", "Chapter 9 Favorite media sources on data science topics", " Chapter 9 Favorite media sources on data science topics The favorite media sources on data science topics are shown in the graph below The last Qualification which is cut off in the legend in the plot above reads “Some college/university study without earning a bachelor’s degree” Those sources offer information about: - Algorithms - New publications - Projects - Releases of new software versions - Recommended courses, popular platforms see Favorite online course platform A few links to sources are given below Kaggle forums.fast.ai medium blog "],
["favorite-online-course-platform.html", "Chapter 10 Favorite online course platform", " Chapter 10 Favorite online course platform Platforms on which survey participants have begun or completed data science courses are shown in the graph below All levels of academics are active on online course platforms. Below there are links to some of the platforms: Coursera Kaggle Courses Udemy Udacity Fast.ai "],
["favorite-data-analyzing-tool.html", "Chapter 11 Favorite data analyzing tool", " Chapter 11 Favorite data analyzing tool Participants primary tool to analyze data are shown in the graph below Most like to use free tools using the programming language “R” and “Python” "],
["experience-in-data-analysis-coding.html", "Chapter 12 Experience in data analysis coding", " Chapter 12 Experience in data analysis coding The duration of participants writing code to analyze data is shown in the graph below The last Qualification which is cut off in the legend in the plot above reads “Some college/university study without earning a bachelor’s degree” Most have less than 5 years coding experience in data analysis Data analysis can be done without writing code "],
["favorite-integrated-development-environments-ides.html", "Chapter 13 Favorite integrated development environments (IDE’s)", " Chapter 13 Favorite integrated development environments (IDE’s) Favorite integrated development environments (IDE’s) are shown in the graph below The last Qualification which is cut off in the legend in the plot above reads “Some college/university study without earning a bachelor’s degree” Below a list of some IDEs, all of them are free except for Matlab. Jupyter Notebook Works with Python, R, Julia, C++, Ruby Visual Studio Code Works with Python, R, Julia, C++, Ruby , SQL, XML, Swift, JSON, Perl, Sass… Debugger Variable viewer Console RStudio Mainly for R Debugger Variable viewer Console PyCharm For Python Debugger Variable viewer Matlab Very well established in industry Originally for control tasks Commercial tool Own syntax "],
["favorite-hosted-notebook-products.html", "Chapter 14 Favorite hosted notebook products", " Chapter 14 Favorite hosted notebook products Favorite hosted notebook products are shown in the graph below The last Qualification which is cut off in the legend in the plot above reads “Some college/university study without earning a bachelor’s degree” Hosted notebooks offer a very easy and comfortable start into writing machine learning code. Some of them are free. Some of them provide many examples from which valuable techniques can be learned. Kaggle Notebooks Great place to find machine learning examples Google Colab Colaboratory is a free Jupyter notebook environment that requires no setup and runs entirely in the cloud Binder Open notebooks in executable environment Microsoft Azure Notebooks Develop and run code from anywhere with Jupyter notebooks on Azure Paperspace Powering next-generation applications and cloud ML/AI pipelines. "],
["favorite-programming-languages.html", "Chapter 15 Favorite programming languages", " Chapter 15 Favorite programming languages Favorite programming languages are shown in the graph below The last Qualification which is cut off in the legend in the plot above reads “Some college/university study without earning a bachelor’s degree” Hands down the most popular programming language for machine learning is Python. If speed matters C++ is the way to go, but still, Python can be used for prototyping. "],
["recommended-entry-programming-language.html", "Chapter 16 Recommended entry programming language", " Chapter 16 Recommended entry programming language Recommended programming language for aspiring data scientist to learn first are shown in the graph below The last Qualification which is cut off in the legend in the plot above reads “Some college/university study without earning a bachelor’s degree” As Python is the most popular machine learning programming language it is not surprising that it is also the most recommended one for beginners. "],
["favorite-data-visualization-libraries-or-tools.html", "Chapter 17 Favorite data visualization libraries or tools", " Chapter 17 Favorite data visualization libraries or tools Favorite data visualization libraries or tools are shown in the graph below The last Qualification which is cut off in the legend in the plot above reads “Some college/university study without earning a bachelor’s degree” With Matplotlib there is a clear winner, however, ggplot2 is the clear favorite in the R world. Matplotlib Matplotlib is a Python 2D plotting library which produces publication quality figures in a variety of hard copy formats and interactive environments across platforms Seaborn Seaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics. ggplot2 ggplot2 is a system for declaratively creating graphics, based on The Grammar of Graphics Available for R and Python Plotly Interactive plots Available for R and Python D3.js Data-Driven Documents Javascript based Can be used from R and Python Bokeh Bokeh is an interactive visualization library for modern web browsers. "],
["favorite-specialized-hardware.html", "Chapter 18 Favorite specialized hardware", " Chapter 18 Favorite specialized hardware Favorite specialized hardware are shown in the graph below The last Qualification which is cut off in the legend in the plot above reads “Some college/university study without earning a bachelor’s degree” CPU =&gt; Central Processing Unit Performs basic arithmetic, logic, and input output instructions Heart of every computing device GPU =&gt; Graphics Processing Unit Optimized processor for graphics Very fast matrix multiplication =&gt; speeds up neural network computation TPU =&gt; Tensor Processing Unit A tensor processing unit (TPU) is an AI accelerator application-specific integrated circuit (ASIC) developed by Google specifically for neural network machine learning. Edge TPU 4 TOPs1 2W In Wei, Brooks, and others (2019) a comparison of the three processors with respect to machine learning capabilities is given: • TPU is highly-optimized for large batches and CNNs, and has the highest training throughput • GPU shows better flexibility and programmability for irregular computations, such as small batches and non- MatMul computations. The training of large FC models also benefits from its sophisticated memory system and higher bandwidth. • CPU has the best programmability, so it achieves the highest FLOPS utilization for RNNs, and it supports the largest model because of large memory capacity. References "],
["favorite-machine-learning-frameworks.html", "Chapter 19 Favorite machine learning frameworks", " Chapter 19 Favorite machine learning frameworks Favorite machine learning frameworks are shown in the graph below The last Qualification which is cut off in the legend in the plot above reads “Some college/university study without earning a bachelor’s degree” Scikit-learn Machine Learning in Python Open source, commercially usable - BSD license TensorFlow An end-to-end open source machine learning platform Keras Keras is a high-level neural networks API, written in Python and capable of running on top of TensorFlow, CNTK, or Theano. RandomForest A random forest classifier Xgboost XGBoost is an optimized distributed gradient boosting library designed to be highly efficient, flexible and portable. PyTorch An open source machine learning framework that accelerates the path from research prototyping to production deployment. LightGBM LightGBM is a gradient boosting framework that uses tree based learning algorithms. Caret The caret package (short for Classification And REgression Training) is a set of functions that attempt to streamline the process for creating predictive models. For the programming language R Fast.ai Making neural nets uncool again Blogs MOOC2 Massive Open Online Courses↩ "],
["favorite-cloud-computing-platforms.html", "Chapter 20 Favorite cloud computing platforms", " Chapter 20 Favorite cloud computing platforms Favorite cloud computing platforms are shown in the graph below The last Qualification which is cut off in the legend in the plot above reads “Some college/university study without earning a bachelor’s degree” Amazon Web Services (AWS) AWS has the services to help you build sophisticated applications with increased flexibility, scalability and reliability Google Cloud Platform (GCP) Build scalable apps Microsoft Azure Turn ideas into solutions with more than 100 services to build, deploy, and manage applications—in the cloud, on-premises, and at the edge—using the tools and frameworks of your choice. IBM Cloud Discover a faster, more secure journey to cloud trusted by thousands of enterprises across 20 industries VMware Cloud Manage your entire app portfolio across hybrid and native public clouds Oracle Cloud Oracle Cloud is a cloud computing service offered by Oracle Corporation providing servers, storage, network, applications and services through a global network of Oracle Corporation managed data centers. Salesforce Cloud Try the world’s #1 service platform: the time-saving, joy-boosting, relationship-building machine. Alibaba Cloud Experience the Latest in Cloud Computing, Storage, Networking, Security, Big Data and Artificial Intelligence on Alibaba Cloud SAP Cloud Achieve process excellence, deliver engaging digital experiences, and simplify data-driven innovation with a multi-cloud architecture. Red Hat Cloud Red Hat® Cloud Access is the program that allows our customers to run eligible Red Hat product subscriptions on certified public cloud providers. "],
["favorite-big-data-analytics-products.html", "Chapter 21 Favorite big data / analytics products", " Chapter 21 Favorite big data / analytics products Favorite big data / analytics products are shown in the graph below The last Qualification which is cut off in the legend in the plot above reads “Some college/university study without earning a bachelor’s degree” "],
["favorite-automated-machine-learning-tools-or-partial-automl-tools.html", "Chapter 22 Favorite automated machine learning tools (or partial AutoML tools)", " Chapter 22 Favorite automated machine learning tools (or partial AutoML tools) Favorite automated machine learning tools (or partial AutoML tools) are shown in the graph below The last Qualification which is cut off in the legend in the plot above reads “Some college/university study without earning a bachelor’s degree” "],
["literature.html", "Chapter 23 Literature", " Chapter 23 Literature List of all sources quoted in the webpage "]
]
